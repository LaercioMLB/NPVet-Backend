name: Node.js CI

on:
  push:
    branches:
      - main
env:
  AWS_AKI: ASIAZNGUUBCK2VEWS2FZ
  AWS_SAK: lctup4iV9ITsFLPoRWrrQtANjIgMEdqLMTh9Ke72
  AWS_ST: FwoGZXIvYXdzEK///////////wEaDAnZzupnY5GPF/VKXiLIAeLIOnf9NjWPUhi1HS7yKXeLLSwvzql92kRzUiuTRKgbQYu0wUXJ1A2qhl9/TxFAWcjHr43Cje0a382Drfm3mOHKjwKzXwGbm79eDCEsJYr75Bvgzg7c3kFpPxm36woL00ysjv/Qkmt/o56bAS9NOHKhjoeu51ddoFtAT4NmM2vGmoEP8ghdDBVbZpFCS4CUTIioCyz4qyVngjJgL/Hexmg9jW/Ipi8r5k9rdYa6wdWYRvIijuKb7vh+DbXiLDpnkO5owQrkAdDuKJq+s6oGMi13eSPPrc0+1gMAYlUuJyPXzE70JUzcMi37HphtDTi7j1WBjpVSOaHZq8yQrX4=
  AWS_R: us-east-1
  AWS_U_ECR: 646838487189.dkr.ecr.us-east-1.amazonaws.com

jobs:
  build_docker_images:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout c√≥digo
      uses: actions/checkout@v2
      
    - name: Configure AWS credentials for kubectl
      run: aws configure set aws_access_key_id $AWS_AKI && aws configure set aws_secret_access_key $AWS_SAK && aws configure set aws_session_token $AWS_ST && aws configure set region $AWS_R
    
    - name: Configure AWS credentials for kubectl        
      run: aws ecr get-login-password --region $AWS_R | docker login --username AWS --password-stdin $AWS_U_ECR
    
    - name: Build e Push da imagem Docker do frontend
      run: |
        docker build -t npvet-backend . &&
        docker tag npvet-backend:latest $AWS_U_ECR/npvet-backend:latest &&
        docker push $AWS_U_ECR/npvet-backend:latest

#    - name: Deploy kubernetes
#      working-directory: ./
#      run: |
#        aws eks update-kubeconfig --name aplication-web &&
#        kubectl apply -f k8s/
    


      
